apply plugin: 'com.android.library'


version = "3.0.0"

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"

    defaultConfig {
        minSdkVersion 9
        targetSdkVersion 25
        versionCode 1
        versionName "3.0"
        publishNonDefault true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        checkReleaseBuilds false
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    androidTestCompile 'org.testng:testng:6.9.6'
}

println("finally !!")
println(build.name)

task copyAARToCommonLibs() << {

    def path = project.rootDir.path + '/TNS-Sifo-Mobile-Analytics-SDK-3.0.0'
    println  "Project Name:   "+ project.name;
    def aarPath = project.rootDir.path + "/" + project.name + "/build/outputs/aar"
    mkdir(path)

    copy {
        from(aarPath) {
            println("Will try to copy")
            include '*-release.aar'
        }
        into path
    }

    /*
    println  "Root project:   "+ project.rootProject;
    println  "  rootDir:      "+ project.rootDir;
    println  "  projectDir:   "+ project.projectDir;
    println  "  project dir:  "+ System.getProperty("user.dir");

    System.setProperty( "user.dir", project.projectDir.toString())
    println  "  project dir:  "+ System.getProperty("user.dir");
    */

}


afterEvaluate {
    copyAARToCommonLibs.dependsOn assembleRelease
    copyAARToCommonLibs.dependsOn assembleDebug

    assembleRelease.doLast {
        copyAARToCommonLibs.execute()
    }

    assembleDebug.doLast {
        copyAARToCommonLibs.execute()
    }
}



