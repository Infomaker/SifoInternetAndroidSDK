apply plugin: 'com.android.library'


version = "3.0.0"

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"

    defaultConfig {
        minSdkVersion 9
        targetSdkVersion 25
        versionCode 1
        versionName "3.0.0"
        publishNonDefault true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        checkReleaseBuilds false
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    androidTestCompile 'org.testng:testng:6.9.6'
}

android.libraryVariants.all { variant ->

    println variant.name.capitalize() + " ?!!!!!!!!!!!?"

    task("generate${variant.name.capitalize()}Javadoc", type: Javadoc) {
        // title = ''
        // description = ''
        source = variant.javaCompile.source
        classpath = files(variant.javaCompile.classpath.files, project.android.getBootClasspath())
        options {
            links "http://docs.oracle.com/javase/7/docs/api/"
            linksOffline "http://d.android.com/reference","${android.sdkDirectory}/docs/reference"
        }
        exclude '**/BuildConfig.java'
        exclude '**/R.java'

        
    }

    variant.outputs.each { output ->
        def outputFile = output.outputFile
        if (outputFile != null && outputFile.name.endsWith('.aar')) {
            def fileName = "kantar.sifo.mobile.analytics-${version}.aar"
            output.outputFile = new File(outputFile.parent, fileName)
        }
    }
}

afterEvaluate {
    generateReleaseJavadoc.execute()
    generateDebugJavadoc.execute()
}




